{"version":3,"sources":["Login.js","Player.js","TrackSearchResult.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["Login","Container","className","style","minHeight","href","Player","accessToken","trackUri","useState","play","setPlay","useEffect","token","showSaveIcon","callback","state","isPlaying","uris","TrackSearchResult","track","chooseTrack","cursor","onClick","src","albumUrl","height","width","alt","title","artist","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","search","setSearch","searchResult","setSearchResult","selectedSong","setSelectedSong","lyrics","setLyrics","get","params","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","artists","name","uri","url","Form","Control","type","placeholder","value","onChange","e","target","length","whiteSpace","paddingBottom","overflowY","URLSearchParams","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca193fde.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nconst AUTH_URL =  \"https://accounts.spotify.com/authorize?client_id=dc98d5777aaa4443b1e2218303fa630c&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\"\r\nexport default function Login() {\r\n    return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n            <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>\r\n                Login With Spotify\r\n            </a>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport SpotifyPlayer from 'react-spotify-web-playback'\r\nexport default function Player({ accessToken, trackUri }) {\r\n\r\n    const [play, setPlay] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setPlay(true)\r\n    }, [trackUri])\r\n\r\n\r\n    if (!accessToken) return null\r\n    return (\r\n        <SpotifyPlayer\r\n            token={accessToken}\r\n            showSaveIcon\r\n            callback={state => {\r\n                if (!state.isPlaying) setPlay(false)\r\n            }}\r\n            play={play}\r\n            uris={trackUri ? [trackUri] : []}\r\n        />\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TrackSearchResult({ track, chooseTrack }) {\r\n    function handlePlay(){\r\n        chooseTrack(track);\r\n    }\r\n    return (\r\n        <div\r\n        className=\"d-flex m-2 align-items-center\" \r\n        style={{ cursor: 'pointer' }}\r\n        onClick={handlePlay}\r\n        >\r\n            <img src={track.albumUrl} style={{ height: '64px', width: '64px' }} alt={'album cover'}/>\r\n            <div className=\"ms-3\">\r\n                <div> {track.title}</div>\r\n                <div className=\"text-muted\"> {track.artist}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport useAuth from \"./useAuth\";\r\nimport Player from './Player';\r\nimport TrackSearchResult from './TrackSearchResult';\r\nimport { Container, Form } from 'react-bootstrap';\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\nimport axios from 'axios';\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: 'dc98d5777aaa4443b1e2218303fa630c'\r\n})\r\nexport default function Dashboard({ code }) {\r\n    const accessToken = useAuth(code);\r\n    const [search, setSearch] = useState('');\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [selectedSong, setSelectedSong] = useState();\r\n    const [lyrics, setLyrics] = useState('');\r\n\r\n    const chooseTrack = (track) => {\r\n        setSelectedSong(track);\r\n        setSearch('');\r\n        setLyrics('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!selectedSong) return\r\n        axios.get('http://localhost:3001/lyrics', {\r\n            params: {\r\n                track: selectedSong.title,\r\n                artist: selectedSong.artist\r\n            }\r\n        }).then(res => {\r\n            setLyrics(res.data.lyrics);\r\n        })\r\n    }, [selectedSong])\r\n\r\n    useEffect(() => {\r\n        if (!accessToken) return;\r\n        spotifyApi.setAccessToken(accessToken);\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResult([]);\r\n        if (!accessToken) return;\r\n\r\n        let cancel = false;\r\n        spotifyApi.searchTracks(search).then(res => {\r\n            if (cancel) return\r\n            setSearchResult(res.body.tracks.items.map(track => {\r\n                const smallestAlbumImage = track.album.images.reduce(\r\n                    (smallest, image) => {\r\n                        if (image.height < smallest.height) return image\r\n                        return smallest\r\n                    }, track.album.images[0])\r\n\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri: track.uri,\r\n                    albumUrl: smallestAlbumImage.url\r\n                }\r\n            }))\r\n        })\r\n        return () => cancel = true\r\n    }, [search, accessToken])\r\n    return (\r\n        <Container className=\"d-flex flex-column py-2\" style={{ height: '100vh' }}>\r\n            <Form.Control\r\n                type=\"serach\"\r\n                placeholder=\"Search Songs/Artists\"\r\n                value={search}\r\n                onChange={e => setSearch(e.target.value)}\r\n            />\r\n            {searchResult.length === 0 && (\r\n                <div className=\"text-center my-2\" style={{ whiteSpace: 'pre', paddingBottom: '80px'}}>\r\n                    {lyrics}\r\n                </div>\r\n            )}\r\n            <div className=\"flex-grow-1 my-2\" style={{ overflowY: 'auto' }}>\r\n                {searchResult.map(track => (\r\n                    <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n                ))}\r\n            </div>\r\n            <div className=\"fixed-bottom\"> <Player accessToken={accessToken} trackUri={selectedSong?.uri} /> </div>\r\n        </Container>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useAuth(code) {\r\n    const [accessToken, setAccessToken] = useState();\r\n    const [refreshToken, setRefreshToken] = useState();\r\n    const [expiresIn, setExpiresIn] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.post('http://localhost:3001/login', {\r\n            code,\r\n        })\r\n            .then(res => {\r\n                setAccessToken(res.data.accessToken);\r\n                setRefreshToken(res.data.refreshToken);\r\n                setExpiresIn(res.data.expiresIn);\r\n                window.history.pushState({}, null, '/')\r\n            })\r\n            .catch(() => {\r\n                window.location = '/'\r\n            })\r\n    }, [code])\r\n\r\n    useEffect(() => {\r\n        if (!refreshToken || !expiresIn) return;\r\n        const interval = setInterval(() => {\r\n            axios.post('http://localhost:3001/refresh', {\r\n                refreshToken,\r\n            })\r\n                .then(res => {\r\n                    setAccessToken(res.data.accessToken)\r\n                    setExpiresIn(res.data.expiresIn)\r\n                })\r\n                .catch(() => {\r\n                    window.location = '/'\r\n                })\r\n        }, (expiresIn - 60) * 1000)\r\n        return () => clearInterval(interval);\r\n    }, [refreshToken, accessToken, expiresIn])\r\n    return accessToken\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nconst code = new URLSearchParams(window.location.search).get('code')\nfunction App() {\n  return (\n    code ? <Dashboard code={code} /> : <Login />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}